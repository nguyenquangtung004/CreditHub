part of 'request_cubit.dart';

abstract class RequestState extends Equatable {
  const RequestState();

  @override
  List<Object> get props => [];
}

/// âœ… **Tráº¡ng thÃ¡i ban Ä‘áº§u**
class RequestInitial extends RequestState {}

/// âœ… **Tráº¡ng thÃ¡i Ä‘ang táº£i dá»¯ liá»‡u**
class RequestLoading extends RequestState {}

/// âœ… **Tráº¡ng thÃ¡i táº£i dá»¯ liá»‡u thÃ nh cÃ´ng**
class RequestSuccess extends RequestState {
  final PaginationResponse<RequestHistory> data;
  final List<int> requestIds; // ðŸ”¥ ThÃªm danh sÃ¡ch ID vÃ o state
  const RequestSuccess(this.data, this.requestIds);

  @override
  List<Object> get props => [data, requestIds];
}

/// âœ… Tráº¡ng thÃ¡i táº£i chi tiáº¿t yÃªu cáº§u thÃ nh cÃ´ng
class RequestDetailSuccess extends RequestState {
  final RequestHistory requestDetail; 

  const RequestDetailSuccess(this.requestDetail);

  @override
  List<Object> get props => [requestDetail];
}

/// âœ… **Tráº¡ng thÃ¡i lá»—i**
class RequestFailure extends RequestState {
  final String error;

  const RequestFailure(this.error);

  @override
  List<Object> get props => [error];
}
